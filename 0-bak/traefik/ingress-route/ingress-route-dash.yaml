
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: certificate-dash
  namespace: traefik
spec:
  dnsNames:
    - traefik.env0.luojm.com
  secretName: ingress-route-certicate-dash
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer

---

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: secure-traefik-dash
  namespace: traefik
spec:
  entryPoints:
    - websecure
  tls: 
    secretName: ingress-route-certicate-dash
  routes:
    - match: Host(`traefik.env0.luojm.com`)  
      kind: Rule
      services:
        - kind: TraefikService
          name: api@internal
      middlewares:
        - name: auth

---

apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: auth
  namespace: traefik
spec:
  basicAuth:
    secret: auth-secret # Kubernetes secret named "secretName"

---

kind: Secret
apiVersion: v1
metadata:
  name: auth-secret
  namespace: traefik
type: Opaque
data:
  auth: bHVvam06JGFwcjEkV2I2TTRXM2EkVzdDMmRMVS5NLnloeDdPTG4veVA0Lwo=
# htpasswd -bc auth luojm ccccc123
# kubectl create secret generic auth-secret --from-file=auth

---

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: insecure-traefik-dash
  namespace: traefik
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`192.168.1.201`)  
      kind: Rule
      services:
        - kind: TraefikService
          name: api@internal